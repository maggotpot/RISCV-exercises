#Print 1 if the array is sorted from the smallest to the largest integer, otherwise print 0

.data

n: .word 6
x: .word 2, 5, 8, 11, 25, 31

.text #I assume that n >= 2

la s0, x #load address of array
addi s0, s0, 4 #pointer of the first element of the array
lw t0, -4(s0) #store into t0 value before the one with the pointer
lw s1, n
li a0, 1
addi s1, s1, -1 #decrement array length

ciclo:
lw t1, 0(s0)
bge t1, t0, vabene #check if t1 greater than t0
li a0, 0
beq zero, zero, fine

vabene:
addi s0, s0, 4
mv t0, t1
addi s1, s1, -1
bne s1, zero, ciclo #if length not equal to 0, branch

fine:
li a7, 1
ecall
li a7, 10
ecall